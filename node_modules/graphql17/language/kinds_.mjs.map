{"version":3,"file":"kinds_.js","sourceRoot":"","sources":["../../src/language/kinds_.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-redeclare */\n\n/** Name */\nexport const NAME = 'Name';\nexport type NAME = typeof NAME;\n\n/** Document */\nexport const DOCUMENT = 'Document';\nexport type DOCUMENT = typeof DOCUMENT;\nexport const OPERATION_DEFINITION = 'OperationDefinition';\nexport type OPERATION_DEFINITION = typeof OPERATION_DEFINITION;\nexport const VARIABLE_DEFINITION = 'VariableDefinition';\nexport type VARIABLE_DEFINITION = typeof VARIABLE_DEFINITION;\nexport const SELECTION_SET = 'SelectionSet';\nexport type SELECTION_SET = typeof SELECTION_SET;\nexport const FIELD = 'Field';\nexport type FIELD = typeof FIELD;\nexport const ARGUMENT = 'Argument';\nexport type ARGUMENT = typeof ARGUMENT;\nexport const FRAGMENT_ARGUMENT = 'FragmentArgument';\nexport type FRAGMENT_ARGUMENT = typeof FRAGMENT_ARGUMENT;\n\n/** Fragments */\nexport const FRAGMENT_SPREAD = 'FragmentSpread';\nexport type FRAGMENT_SPREAD = typeof FRAGMENT_SPREAD;\nexport const INLINE_FRAGMENT = 'InlineFragment';\nexport type INLINE_FRAGMENT = typeof INLINE_FRAGMENT;\nexport const FRAGMENT_DEFINITION = 'FragmentDefinition';\nexport type FRAGMENT_DEFINITION = typeof FRAGMENT_DEFINITION;\n\n/** Values */\nexport const VARIABLE = 'Variable';\nexport type VARIABLE = typeof VARIABLE;\nexport const INT = 'IntValue';\nexport type INT = typeof INT;\nexport const FLOAT = 'FloatValue';\nexport type FLOAT = typeof FLOAT;\nexport const STRING = 'StringValue';\nexport type STRING = typeof STRING;\nexport const BOOLEAN = 'BooleanValue';\nexport type BOOLEAN = typeof BOOLEAN;\nexport const NULL = 'NullValue';\nexport type NULL = typeof NULL;\nexport const ENUM = 'EnumValue';\nexport type ENUM = typeof ENUM;\nexport const LIST = 'ListValue';\nexport type LIST = typeof LIST;\nexport const OBJECT = 'ObjectValue';\nexport type OBJECT = typeof OBJECT;\nexport const OBJECT_FIELD = 'ObjectField';\nexport type OBJECT_FIELD = typeof OBJECT_FIELD;\n\n/** Directives */\nexport const DIRECTIVE = 'Directive';\nexport type DIRECTIVE = typeof DIRECTIVE;\n\n/** Types */\nexport const NAMED_TYPE = 'NamedType';\nexport type NAMED_TYPE = typeof NAMED_TYPE;\nexport const LIST_TYPE = 'ListType';\nexport type LIST_TYPE = typeof LIST_TYPE;\nexport const NON_NULL_TYPE = 'NonNullType';\nexport type NON_NULL_TYPE = typeof NON_NULL_TYPE;\n\n/** Type System Definitions */\nexport const SCHEMA_DEFINITION = 'SchemaDefinition';\nexport type SCHEMA_DEFINITION = typeof SCHEMA_DEFINITION;\nexport const OPERATION_TYPE_DEFINITION = 'OperationTypeDefinition';\nexport type OPERATION_TYPE_DEFINITION = typeof OPERATION_TYPE_DEFINITION;\n\n/** Type Definitions */\nexport const SCALAR_TYPE_DEFINITION = 'ScalarTypeDefinition';\nexport type SCALAR_TYPE_DEFINITION = typeof SCALAR_TYPE_DEFINITION;\nexport const OBJECT_TYPE_DEFINITION = 'ObjectTypeDefinition';\nexport type OBJECT_TYPE_DEFINITION = typeof OBJECT_TYPE_DEFINITION;\nexport const FIELD_DEFINITION = 'FieldDefinition';\nexport type FIELD_DEFINITION = typeof FIELD_DEFINITION;\nexport const INPUT_VALUE_DEFINITION = 'InputValueDefinition';\nexport type INPUT_VALUE_DEFINITION = typeof INPUT_VALUE_DEFINITION;\nexport const INTERFACE_TYPE_DEFINITION = 'InterfaceTypeDefinition';\nexport type INTERFACE_TYPE_DEFINITION = typeof INTERFACE_TYPE_DEFINITION;\nexport const UNION_TYPE_DEFINITION = 'UnionTypeDefinition';\nexport type UNION_TYPE_DEFINITION = typeof UNION_TYPE_DEFINITION;\nexport const ENUM_TYPE_DEFINITION = 'EnumTypeDefinition';\nexport const ENUM_VALUE_DEFINITION = 'EnumValueDefinition';\nexport type ENUM_VALUE_DEFINITION = typeof ENUM_VALUE_DEFINITION;\nexport const INPUT_OBJECT_TYPE_DEFINITION = 'InputObjectTypeDefinition';\nexport type INPUT_OBJECT_TYPE_DEFINITION = typeof INPUT_OBJECT_TYPE_DEFINITION;\n\n/** Directive Definitions */\nexport const DIRECTIVE_DEFINITION = 'DirectiveDefinition';\nexport type DIRECTIVE_DEFINITION = typeof DIRECTIVE_DEFINITION;\n\n/** Type System Extensions */\nexport const SCHEMA_EXTENSION = 'SchemaExtension';\nexport type SCHEMA_EXTENSION = typeof SCHEMA_EXTENSION;\n\n/** Type Extensions */\nexport const SCALAR_TYPE_EXTENSION = 'ScalarTypeExtension';\nexport type SCALAR_TYPE_EXTENSION = typeof SCALAR_TYPE_EXTENSION;\nexport const OBJECT_TYPE_EXTENSION = 'ObjectTypeExtension';\nexport type OBJECT_TYPE_EXTENSION = typeof OBJECT_TYPE_EXTENSION;\nexport const INTERFACE_TYPE_EXTENSION = 'InterfaceTypeExtension';\nexport type INTERFACE_TYPE_EXTENSION = typeof INTERFACE_TYPE_EXTENSION;\nexport const UNION_TYPE_EXTENSION = 'UnionTypeExtension';\nexport type UNION_TYPE_EXTENSION = typeof UNION_TYPE_EXTENSION;\nexport const ENUM_TYPE_EXTENSION = 'EnumTypeExtension';\nexport type ENUM_TYPE_EXTENSION = typeof ENUM_TYPE_EXTENSION;\nexport const INPUT_OBJECT_TYPE_EXTENSION = 'InputObjectTypeExtension';\nexport type INPUT_OBJECT_TYPE_EXTENSION = typeof INPUT_OBJECT_TYPE_EXTENSION;\n"]}